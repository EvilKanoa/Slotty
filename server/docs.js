const swaggerUi = require('swagger-ui-express');
const swaggerJSDoc = require('swagger-jsdoc');
const { apiUrl } = require('./utils');

/**
 * Defines the swagger definition config object to use when generating a swagger spec.
 * @readonly
 * @type {Object}
 */
const swaggerDefinition = Object.freeze({
  swagger: '2.0',
  info: {
    title: 'Slotty API',
    version: '0.0.1',
    description:
      'Provides access to the Slotty backend allowing creation and modification of notifications designed for students to get into open courses quickly.',
  },
  basePath: '/api',
  consumes: ['application/json'],
  produces: ['application/json'],
});

/**
 * Defines the options object used to generate the swagger spec via swagger-jsdoc.
 * @readonly
 * @type {Object}
 */
const swaggerJSDocOptions = Object.freeze({
  swaggerDefinition,
  apis: ['./server/routes.js'],
});

/**
 * Defines the options object used when creating a swagger UI.
 * These options are passed to swagger-ui-express.
 * @readonly
 * @type {Object}
 */
const swaggerUiOptions = Object.freeze({
  explorer: false, // not visible when topbar hidden and not useful for this small of an API
  customCss: '.swagger-ui .topbar { display: none }', // hide the topbar
});

/**
 * Generates a swagger spec from the API documentation in JSDoc comments.
 * @param {Object} options The swaggerJSDoc options object to use when generating the spec.
 * @returns {String} The generated swagger spec string.
 */
const generateSpec = (options = swaggerJSDocOptions) => {
  console.log('Generating swagger API documentation spec...');
  return swaggerJSDoc(options);
};

/**
 * Attaches routes for API documentation to an express app instance.
 * You can pass in a pre-generated spec if you want, otherwise, will generate a spec from JSDoc comments.
 * Will be available at the endpoint generated by utils.apiUrl('docs') and a static file containing the entire spec will be available at utils.apiUrl('docs.json').
 * @param {Express} app Express app instance.
 * @param {Object} [options=swaggerUiOptions] The options to be passed to swagger-ui-express. Sensible defaults will be applied if none given.
 * @param {String} [spec=generateSpec()] The swagger spec to use, if not given, will be generated.
 */
const routes = (app, options = swaggerUiOptions, spec = generateSpec()) => {
  // serve the complete spec as a file
  app.get(apiUrl('docs.json'), (req, res) => {
    res.setHeader('Content-Type', 'application/json');
    res.send(spec);
  });
  console.log(`Swagger API spec file available: '${apiUrl('docs.json')}'`);

  // use the swagger UI at the same URL
  app.use(apiUrl('docs'), swaggerUi.serve, swaggerUi.setup(spec, options));
  console.log(`Swagger API UI available: '${apiUrl('docs')}'`);
};

module.exports = routes;
